{"version":3,"sources":["components/OrderOverview.js","actions/meals.js","actions/actionTypes.js","components/MenuChoices.js","components/ButtonMeal.js","App2.js","serviceWorker.js","reducers/index.js","reducers/meals.js","store/index.js","store/initialState.js","index.js"],"names":["OrderOverview","pedido","this","props","meals","menuChoices","map","menuChoice","i","react_default","a","createElement","key","precio","menuPrices","menuPrice","total","reduce","prev","act","parseInt","cliente","Component","connect","state","Object","objectSpread","selectBreakFast","dispatch","event","type","payload","selectLunch","MenuChoices","_getPrototypeOf2","_this","classCallCheck","_len","arguments","length","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","showResume","handleClick","bind","assertThisInitialized","onClickHandler2","_this2","menu","men","comida","meal","tipo","name","value","onClick","breakfast","target","lunch","ButtonMeal","onClickHandler3","App2","args","client","showOptions","handleClick3","setState","components_ButtonMeal","onChange","updateClient","components_MenuChoices","components_OrderOverview","Boolean","window","location","hostname","match","combineReducers","undefined","action","toConsumableArray","createStore","reducer","composeWithDevTools","applyMiddleware","thunkMiddleware","ReactDOM","render","es","store","src_App2","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c076d033.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass OrderOverview extends Component {\r\n\r\n  render() {\r\n    const pedido = this.props.meals.menuChoices.map((menuChoice, i) => {\r\n      return (\r\n        <p key = {i}>{menuChoice}</p>\r\n      )\r\n    })\r\n\r\n    const precio = this.props.meals.menuPrices.map((menuPrice, i) => {\r\n      return (\r\n        <p key= {i}>{menuPrice}</p>\r\n      )\r\n    })\r\n\r\n    const total = this.props.meals.menuPrices.reduce((prev, act, i) => {\r\n      return parseInt(prev) + parseInt(act);\r\n    }, 0)\r\n\r\n\r\n    return (\r\n\r\n      <div>\r\n        <hr />\r\n        <p>RESUMEN PEDIDO</p>\r\n        <span>Nombre Cliente: {this.props.cliente}</span>\r\n        <div>{pedido}</div >\r\n        <div>{precio}</div>\r\n        <p>{total}</p>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ...state\r\n  };\r\n}\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(OrderOverview);\r\n","import { BREAKFAST, LUNCH } from \"./actionTypes\";\r\n\r\nexport const selectBreakFast = dispatch => {\r\n  return (event) => {\r\n    dispatch({\r\n      type: BREAKFAST,\r\n      payload: event\r\n\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const selectLunch = dispatch => (event) => {\r\n  dispatch({\r\n    type: LUNCH,\r\n    payload: event,\r\n  })\r\n}\r\n","export const BREAKFAST = \"BREAKFAST\";\r\nexport const LUNCH = \"LUNCH\";\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectBreakFast, selectLunch } from '../actions/meals';\r\n\r\n\r\nclass MenuChoices extends Component {\r\n  constructor(...props) {\r\n    super(...props);\r\n\r\n    this.state = {\r\n      showResume: false,\r\n    }\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n    \r\n  }\r\n\r\n  handleClick(event) {\r\n    this.props.onClickHandler2(event)\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    const menu = this.props.menu.map((men, i) => {\r\n\r\n      if (men.comida === this.props.meal) {\r\n        return (\r\n          <div key= {men.tipo}>\r\n            <button name={men.tipo} value={men.precio} onClick={(event) => { this.props.breakfast(event.target) }}>{men.tipo}</button>\r\n          </div>\r\n        )\r\n      }\r\n      return(<p key = {men.tipo}></p>)\r\n    })\r\n\r\n    return (\r\n      <div>\r\n        {menu}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ...state\r\n  };\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    breakfast: selectBreakFast(dispatch),\r\n    lunch: selectLunch(dispatch),\r\n  }\r\n}\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MenuChoices);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass ButtonMeal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n\r\n  handleClick(event) {\r\n    this.props.onClickHandler3(event)\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n        <button name=\"Desayuno\"     onClick={this.handleClick}>Desayuno       </button>\r\n        <button name=\"MenÃº diario\"  onClick={this.handleClick}>Almuerzo y Cena</button>\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ...state\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(ButtonMeal);\r\n","import React, { Component } from 'react';\r\nimport { menu } from './menu.json';\r\nimport { connect } from 'react-redux';\r\nimport OrderOverview from './components/OrderOverview';\r\nimport MenuChoices from './components/MenuChoices';\r\nimport ButtonMeal from './components/ButtonMeal';\r\n\r\nclass App2 extends Component {\r\n  constructor(...args) {\r\n    super(...args)\r\n    this.state = {\r\n      menu,\r\n      client: \"\",\r\n      showOptions: false,\r\n    }\r\n\r\n    this.handleClick3 = this.handleClick3.bind(this);\r\n  }\r\n\r\n  handleClick3(event) {\r\n    this.setState({\r\n      ...this.state,\r\n      meal: event.target.name,\r\n      showOptions: true,\r\n    });\r\n  }\r\n\r\n  updateClient(event) {\r\n    this.setState({\r\n      ...this.state,\r\n      client: event.target.value\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Burguer Queen</h1>\r\n        <h2>Fast food 24 Hours</h2>\r\n\r\n        <ButtonMeal onClickHandler3={this.handleClick3}>Elige meal(Desayuno o AlmuerzoyCena)</ButtonMeal>\r\n\r\n        {this.state.showOptions && (\r\n\r\n\r\n          <div>\r\n            <label> Nombre cliente </label>\r\n            <input type=\"text\" value={this.state.client} onChange={this.updateClient.bind(this)} />\r\n\r\n            <MenuChoices menu={menu} meal={this.state.meal} ></MenuChoices>\r\n\r\n            <OrderOverview cliente={this.state.client} onChange={this.updateClient.bind(this)}> Muestra resumen del pedido </OrderOverview>\r\n\r\n          </div>\r\n\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\n// const mapStateToProps = (state)=>{  //RECIBE EL ESTADO DESDE REDUX Y SE LO ASIGNA A LOS PROPs. SI QUIERO SOLO UN ELEMENTO. PUEDO INDICAR QUÃ\r\n//   return {\r\n//     ...state\r\n//   };\r\n// };\r\n\r\n\r\nexport default connect(\r\n  // mapStateToProps,\r\n)(App2);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\r\nimport meals from './meals';\r\nexport default combineReducers({\r\n  meals,\r\n});\r\n","import { BREAKFAST, LUNCH } from \"../actions/actionTypes\";\r\n\r\nexport default (\r\n  state = {\r\n    menuChoices: [],\r\n    menuPrices: [],\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n\r\n    case BREAKFAST:\r\n      return {\r\n        ...state,\r\n\r\n        menuChoices: [...state.menuChoices, action.payload.name],\r\n        menuPrices: [...state.menuPrices, action.payload.value],\r\n      }\r\n\r\n\r\n\r\n    case LUNCH:\r\n      return {\r\n        ...state,\r\n        menuChoices: [...state.menuChoices, action.payload.name],\r\n        menuPrices: [...state.menuPrices, action.payload.value],\r\n      }\r\n\r\n    default: return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';  // aquÃ­ esta extrayendo los elementos que estÃ¡n entre llaves desde el archivo indicado\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport reducer from '../reducers/index';  // equivale a const reducer = require('../reducers/index')\r\nimport state from './initialState';\r\n\r\nexport default createStore(\r\n  reducer,\r\n  state,\r\n  composeWithDevTools(applyMiddleware(thunkMiddleware))\r\n);\r\n","export default {\r\n  meals: {\r\n    menuChoices: [],\r\n    menuPrices: [],\r\n  }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App2 from './App2';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App2 />\n  </Provider>\n  , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}